{"ast":null,"code":"import mixin from \"./layerMixin\";\nimport layerEvents from \"../../lib/layerEvents\";\nexport default {\n  name: \"ImageLayer\",\n  mixins: [mixin],\n  created() {\n    if (this.source) {\n      if (this.source.coordinates) {\n        this.$watch(\"source.coordinates\", function (next) {\n          if (this.initial) return;\n          if (next) {\n            this.mapSource.setCoordinates(next);\n          }\n        }, {\n          deep: true\n        });\n      }\n      if (this.source.url) {\n        this.$watch(\"source.url\", function (next) {\n          if (this.initial) return;\n          if (next) {\n            this.mapSource.updateImage({\n              url: next,\n              coordinates: this.source.coordinates\n            });\n          }\n        }, {\n          deep: true\n        });\n      }\n    }\n    this.$_deferredMount();\n  },\n  methods: {\n    $_deferredMount() {\n      const source = {\n        type: \"image\",\n        ...this.source\n      };\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.initial = false;\n    },\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", {\n            layerId: this.layerId\n          });\n          return existed;\n        }\n      }\n      const layer = {\n        id: this.layerId,\n        source: this.sourceId,\n        type: \"raster\",\n        ...this.layer\n      };\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", {\n        layerId: this.layerId\n      });\n    }\n  }\n};","map":{"version":3,"names":["mixin","layerEvents","name","mixins","created","source","coordinates","$watch","next","initial","mapSource","setCoordinates","deep","url","updateImage","$_deferredMount","methods","type","map","on","$_watchSourceLoading","addSource","sourceId","err","replaceSource","removeSource","$_addLayer","$_bindLayerEvents","existed","getLayer","layerId","replace","removeLayer","$_emitEvent","layer","id","addLayer","before"],"sources":["/Users/azizjonabdugafforov/Desktop/Code/SilkRoadExpress_WebApp/node_modules/vue-mapbox/src/components/layer/ImageLayer.js"],"sourcesContent":["import mixin from \"./layerMixin\";\nimport layerEvents from \"../../lib/layerEvents\";\n\nexport default {\n  name: \"ImageLayer\",\n  mixins: [mixin],\n\n  created() {\n    if (this.source) {\n      if (this.source.coordinates) {\n        this.$watch(\n          \"source.coordinates\",\n          function(next) {\n            if (this.initial) return;\n            if (next) {\n              this.mapSource.setCoordinates(next);\n            }\n          },\n          { deep: true }\n        );\n      }\n\n      if (this.source.url) {\n        this.$watch(\n          \"source.url\",\n          function(next) {\n            if (this.initial) return;\n            if (next) {\n              this.mapSource.updateImage({\n                url: next,\n                coordinates: this.source.coordinates\n              });\n            }\n          },\n          { deep: true }\n        );\n      }\n    }\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      const source = {\n        type: \"image\",\n        ...this.source\n      };\n\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", { layerId: this.layerId });\n          return existed;\n        }\n      }\n      const layer = {\n        id: this.layerId,\n        source: this.sourceId,\n        type: \"raster\",\n        ...this.layer\n      };\n\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", { layerId: this.layerId });\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}