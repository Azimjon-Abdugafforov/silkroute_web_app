{"ast":null,"code":"import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\nexport default {\n  name: \"CanvasLayer\",\n  mixins: [mixin],\n  inject: [\"mapbox\", \"map\"],\n  props: {\n    source: {\n      type: Object,\n      required: true\n    },\n    layer: {\n      type: Object,\n      default: null\n    }\n  },\n  computed: {\n    canvasElement() {\n      return this.mapSource ? this.mapSource.getCanvas() : null;\n    }\n  },\n  watch: {\n    coordinates(val) {\n      if (this.initial) return;\n      this.mapSource.setCoordinates(val);\n    }\n  },\n  created() {\n    this.$_deferredMount();\n  },\n  methods: {\n    $_deferredMount() {\n      const source = {\n        type: \"canvas\",\n        ...this.source\n      };\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.initial = false;\n    },\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", {\n            layerId: this.layerId\n          });\n          return existed;\n        }\n      }\n      let layer = {\n        id: this.layerId,\n        source: this.sourceId,\n        type: \"raster\",\n        ...this.layer\n      };\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", {\n        layerId: this.layerId,\n        canvas: this.canvasElement\n      });\n    }\n  }\n};","map":{"version":3,"names":["layerEvents","mixin","name","mixins","inject","props","source","type","Object","required","layer","default","computed","canvasElement","mapSource","getCanvas","watch","coordinates","val","initial","setCoordinates","created","$_deferredMount","methods","map","on","$_watchSourceLoading","addSource","sourceId","err","replaceSource","removeSource","$_addLayer","$_bindLayerEvents","existed","getLayer","layerId","replace","removeLayer","$_emitEvent","id","addLayer","before","canvas"],"sources":["/Users/azizjonabdugafforov/Desktop/Code/SilkRoadExpress_WebApp/node_modules/vue-mapbox/src/components/layer/CanvasLayer.js"],"sourcesContent":["import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\n\nexport default {\n  name: \"CanvasLayer\",\n  mixins: [mixin],\n\n  inject: [\"mapbox\", \"map\"],\n\n  props: {\n    source: {\n      type: Object,\n      required: true\n    },\n    layer: {\n      type: Object,\n      default: null\n    }\n  },\n\n  computed: {\n    canvasElement() {\n      return this.mapSource ? this.mapSource.getCanvas() : null;\n    }\n  },\n\n  watch: {\n    coordinates(val) {\n      if (this.initial) return;\n      this.mapSource.setCoordinates(val);\n    }\n  },\n\n  created() {\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      const source = {\n        type: \"canvas\",\n        ...this.source\n      };\n\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", { layerId: this.layerId });\n          return existed;\n        }\n      }\n      let layer = {\n        id: this.layerId,\n        source: this.sourceId,\n        type: \"raster\",\n        ...this.layer\n      };\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", {\n        layerId: this.layerId,\n        canvas: this.canvasElement\n      });\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,KAAK,MAAM,cAAc;AAEhC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,CAACF,KAAK,CAAC;EAEfG,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;EAEzBC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEC,MAAM;MACZG,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,SAAS,CAAC,CAAC,GAAG,IAAI;IAC3D;EACF,CAAC;EAEDC,KAAK,EAAE;IACLC,WAAWA,CAACC,GAAG,EAAE;MACf,IAAI,IAAI,CAACC,OAAO,EAAE;MAClB,IAAI,CAACL,SAAS,CAACM,cAAc,CAACF,GAAG,CAAC;IACpC;EACF,CAAC;EAEDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EAEDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAMhB,MAAM,GAAG;QACbC,IAAI,EAAE,QAAQ;QACd,GAAG,IAAI,CAACD;MACV,CAAC;MAED,IAAI,CAACkB,GAAG,CAACC,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,oBAAoB,CAAC;MACrD,IAAI;QACF,IAAI,CAACF,GAAG,CAACG,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAEtB,MAAM,CAAC;MAC3C,CAAC,CAAC,OAAOuB,GAAG,EAAE;QACZ,IAAI,IAAI,CAACC,aAAa,EAAE;UACtB,IAAI,CAACN,GAAG,CAACO,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC;UACpC,IAAI,CAACJ,GAAG,CAACG,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAEtB,MAAM,CAAC;QAC3C;MACF;MACA,IAAI,CAAC0B,UAAU,CAAC,CAAC;MACjB,IAAI,CAACC,iBAAiB,CAACjC,WAAW,CAAC;MACnC,IAAI,CAACmB,OAAO,GAAG,KAAK;IACtB,CAAC;IAEDa,UAAUA,CAAA,EAAG;MACX,IAAIE,OAAO,GAAG,IAAI,CAACV,GAAG,CAACW,QAAQ,CAAC,IAAI,CAACC,OAAO,CAAC;MAC7C,IAAIF,OAAO,EAAE;QACX,IAAI,IAAI,CAACG,OAAO,EAAE;UAChB,IAAI,CAACb,GAAG,CAACc,WAAW,CAAC,IAAI,CAACF,OAAO,CAAC;QACpC,CAAC,MAAM;UACL,IAAI,CAACG,WAAW,CAAC,cAAc,EAAE;YAAEH,OAAO,EAAE,IAAI,CAACA;UAAQ,CAAC,CAAC;UAC3D,OAAOF,OAAO;QAChB;MACF;MACA,IAAIxB,KAAK,GAAG;QACV8B,EAAE,EAAE,IAAI,CAACJ,OAAO;QAChB9B,MAAM,EAAE,IAAI,CAACsB,QAAQ;QACrBrB,IAAI,EAAE,QAAQ;QACd,GAAG,IAAI,CAACG;MACV,CAAC;MACD,IAAI,CAACc,GAAG,CAACiB,QAAQ,CAAC/B,KAAK,EAAE,IAAI,CAACgC,MAAM,CAAC;MACrC,IAAI,CAACH,WAAW,CAAC,OAAO,EAAE;QACxBH,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBO,MAAM,EAAE,IAAI,CAAC9B;MACf,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}