{"ast":null,"code":"import withEvents from \"../../lib/withEvents\";\nimport mapEvents from \"./events\";\nimport options from \"./options\";\nimport withWatchers from \"./mixins/withWatchers\";\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\nimport withAsyncActions from \"./mixins/withAsyncActions\";\nexport default {\n  name: \"GlMap\",\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\n  props: {\n    mapboxGl: {\n      type: Object,\n      default: null\n    },\n    ...options\n  },\n  provide() {\n    const self = this;\n    return {\n      get mapbox() {\n        return self.mapbox;\n      },\n      get map() {\n        return self.map;\n      },\n      get actions() {\n        return self.actions;\n      }\n    };\n  },\n  data() {\n    return {\n      initial: true,\n      initialized: false\n    };\n  },\n  computed: {\n    loaded() {\n      return this.map ? this.map.loaded() : false;\n    },\n    version() {\n      return this.map ? this.map.version : null;\n    },\n    // TODO: make 'bounds' synced prop\n    bounds() {\n      return this.map ? this.map.getBounds() : null;\n    },\n    isStyleLoaded() {\n      return this.map ? this.map.isStyleLoaded() : false;\n    },\n    areTilesLoaded() {\n      return this.map ? this.map.areTilesLoaded() : false;\n    },\n    isMoving() {\n      return this.map ? this.map.isMoving() : false;\n    },\n    canvas() {\n      return this.map ? this.map.getCanvas() : null;\n    },\n    canvasContainer() {\n      return this.map ? this.map.getCanvasContainer() : null;\n    },\n    images() {\n      return this.map ? this.map.listImages() : null;\n    }\n  },\n  created() {\n    this.map = null;\n    this.propsIsUpdating = {};\n    this.mapboxPromise = this.mapboxGl ? Promise.resolve(this.mapboxGl) : import(\"mapbox-gl\");\n  },\n  mounted() {\n    this.$_loadMap().then(map => {\n      this.map = map;\n      if (this.RTLTextPluginUrl !== undefined) {\n        this.mapbox.setRTLTextPlugin(this.RTLTextPluginUrl, this.$_RTLTextPluginError);\n      }\n      const eventNames = Object.keys(mapEvents);\n      this.$_bindMapEvents(eventNames);\n      this.$_registerAsyncActions(map);\n      this.$_bindPropsUpdateEvents();\n      this.initial = false;\n      this.initialized = true;\n      this.$emit(\"load\", {\n        map,\n        component: this\n      });\n    });\n  },\n  beforeDestroy() {\n    this.$nextTick(() => {\n      if (this.map) this.map.remove();\n    });\n  }\n};","map":{"version":3,"names":["withEvents","mapEvents","options","withWatchers","withPrivateMethods","withAsyncActions","name","mixins","props","mapboxGl","type","Object","default","provide","self","mapbox","map","actions","data","initial","initialized","computed","loaded","version","bounds","getBounds","isStyleLoaded","areTilesLoaded","isMoving","canvas","getCanvas","canvasContainer","getCanvasContainer","images","listImages","created","propsIsUpdating","mapboxPromise","Promise","resolve","mounted","$_loadMap","then","RTLTextPluginUrl","undefined","setRTLTextPlugin","$_RTLTextPluginError","eventNames","keys","$_bindMapEvents","$_registerAsyncActions","$_bindPropsUpdateEvents","$emit","component","beforeDestroy","$nextTick","remove"],"sources":["/Users/azizjonabdugafforov/Desktop/Code/SilkRoadExpress_WebApp/node_modules/vue-mapbox/src/components/map/GlMap.vue"],"sourcesContent":["<template>\n  <div class=\"mgl-map-wrapper\">\n    <div v-once :id=\"container\" ref=\"container\" />\n    <slot v-if=\"initialized\" />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../../lib/withEvents\";\nimport mapEvents from \"./events\";\nimport options from \"./options\";\nimport withWatchers from \"./mixins/withWatchers\";\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\nimport withAsyncActions from \"./mixins/withAsyncActions\";\n\nexport default {\n  name: \"GlMap\",\n\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\n\n  props: {\n    mapboxGl: {\n      type: Object,\n      default: null\n    },\n    ...options\n  },\n\n  provide() {\n    const self = this;\n    return {\n      get mapbox() {\n        return self.mapbox;\n      },\n      get map() {\n        return self.map;\n      },\n      get actions() {\n        return self.actions;\n      }\n    };\n  },\n\n  data() {\n    return {\n      initial: true,\n      initialized: false\n    };\n  },\n\n  computed: {\n    loaded() {\n      return this.map ? this.map.loaded() : false;\n    },\n    version() {\n      return this.map ? this.map.version : null;\n    },\n    // TODO: make 'bounds' synced prop\n    bounds() {\n      return this.map ? this.map.getBounds() : null;\n    },\n    isStyleLoaded() {\n      return this.map ? this.map.isStyleLoaded() : false;\n    },\n    areTilesLoaded() {\n      return this.map ? this.map.areTilesLoaded() : false;\n    },\n    isMoving() {\n      return this.map ? this.map.isMoving() : false;\n    },\n    canvas() {\n      return this.map ? this.map.getCanvas() : null;\n    },\n    canvasContainer() {\n      return this.map ? this.map.getCanvasContainer() : null;\n    },\n    images() {\n      return this.map ? this.map.listImages() : null;\n    }\n  },\n\n  created() {\n    this.map = null;\n    this.propsIsUpdating = {};\n    this.mapboxPromise = this.mapboxGl\n      ? Promise.resolve(this.mapboxGl)\n      : import(\"mapbox-gl\");\n  },\n\n  mounted() {\n    this.$_loadMap().then(map => {\n      this.map = map;\n      if (this.RTLTextPluginUrl !== undefined) {\n        this.mapbox.setRTLTextPlugin(\n          this.RTLTextPluginUrl,\n          this.$_RTLTextPluginError\n        );\n      }\n      const eventNames = Object.keys(mapEvents);\n      this.$_bindMapEvents(eventNames);\n      this.$_registerAsyncActions(map);\n      this.$_bindPropsUpdateEvents();\n      this.initial = false;\n      this.initialized = true;\n      this.$emit(\"load\", { map, component: this });\n    });\n  },\n\n  beforeDestroy() {\n    this.$nextTick(() => {\n      if (this.map) this.map.remove();\n    });\n  }\n};\n</script>\n\n<style>\n.mgl-map-wrapper {\n  height: 100%;\n  position: relative;\n  width: 100%;\n}\n\n.mgl-map-wrapper .mapboxgl-map {\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n</style>\n"],"mappings":"AAQA,OAAOA,UAAS,MAAO,sBAAsB;AAC7C,OAAOC,SAAQ,MAAO,UAAU;AAChC,OAAOC,OAAM,MAAO,WAAW;AAC/B,OAAOC,YAAW,MAAO,uBAAuB;AAChD,OAAOC,kBAAiB,MAAO,6BAA6B;AAC5D,OAAOC,gBAAe,MAAO,2BAA2B;AAExD,eAAe;EACbC,IAAI,EAAE,OAAO;EAEbC,MAAM,EAAE,CAACJ,YAAY,EAAEE,gBAAgB,EAAED,kBAAkB,EAAEJ,UAAU,CAAC;EAExEQ,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACD,GAAGV;EACL,CAAC;EAEDW,OAAOA,CAAA,EAAG;IACR,MAAMC,IAAG,GAAI,IAAI;IACjB,OAAO;MACL,IAAIC,MAAMA,CAAA,EAAG;QACX,OAAOD,IAAI,CAACC,MAAM;MACpB,CAAC;MACD,IAAIC,GAAGA,CAAA,EAAG;QACR,OAAOF,IAAI,CAACE,GAAG;MACjB,CAAC;MACD,IAAIC,OAAOA,CAAA,EAAG;QACZ,OAAOH,IAAI,CAACG,OAAO;MACrB;IACF,CAAC;EACH,CAAC;EAEDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACN,GAAE,GAAI,IAAI,CAACA,GAAG,CAACM,MAAM,CAAC,IAAI,KAAK;IAC7C,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACP,GAAE,GAAI,IAAI,CAACA,GAAG,CAACO,OAAM,GAAI,IAAI;IAC3C,CAAC;IACD;IACAC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACR,GAAE,GAAI,IAAI,CAACA,GAAG,CAACS,SAAS,CAAC,IAAI,IAAI;IAC/C,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACV,GAAE,GAAI,IAAI,CAACA,GAAG,CAACU,aAAa,CAAC,IAAI,KAAK;IACpD,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACX,GAAE,GAAI,IAAI,CAACA,GAAG,CAACW,cAAc,CAAC,IAAI,KAAK;IACrD,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACZ,GAAE,GAAI,IAAI,CAACA,GAAG,CAACY,QAAQ,CAAC,IAAI,KAAK;IAC/C,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACb,GAAE,GAAI,IAAI,CAACA,GAAG,CAACc,SAAS,CAAC,IAAI,IAAI;IAC/C,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACf,GAAE,GAAI,IAAI,CAACA,GAAG,CAACgB,kBAAkB,CAAC,IAAI,IAAI;IACxD,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACjB,GAAE,GAAI,IAAI,CAACA,GAAG,CAACkB,UAAU,CAAC,IAAI,IAAI;IAChD;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnB,GAAE,GAAI,IAAI;IACf,IAAI,CAACoB,eAAc,GAAI,CAAC,CAAC;IACzB,IAAI,CAACC,aAAY,GAAI,IAAI,CAAC5B,QAAO,GAC7B6B,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC9B,QAAQ,IAC7B,MAAM,CAAC,WAAW,CAAC;EACzB,CAAC;EAED+B,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC,CAACC,IAAI,CAAC1B,GAAE,IAAK;MAC3B,IAAI,CAACA,GAAE,GAAIA,GAAG;MACd,IAAI,IAAI,CAAC2B,gBAAe,KAAMC,SAAS,EAAE;QACvC,IAAI,CAAC7B,MAAM,CAAC8B,gBAAgB,CAC1B,IAAI,CAACF,gBAAgB,EACrB,IAAI,CAACG,oBACP,CAAC;MACH;MACA,MAAMC,UAAS,GAAIpC,MAAM,CAACqC,IAAI,CAAC/C,SAAS,CAAC;MACzC,IAAI,CAACgD,eAAe,CAACF,UAAU,CAAC;MAChC,IAAI,CAACG,sBAAsB,CAAClC,GAAG,CAAC;MAChC,IAAI,CAACmC,uBAAuB,CAAC,CAAC;MAC9B,IAAI,CAAChC,OAAM,GAAI,KAAK;MACpB,IAAI,CAACC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACgC,KAAK,CAAC,MAAM,EAAE;QAAEpC,GAAG;QAAEqC,SAAS,EAAE;MAAK,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC;EAEDC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACC,SAAS,CAAC,MAAM;MACnB,IAAI,IAAI,CAACvC,GAAG,EAAE,IAAI,CAACA,GAAG,CAACwC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}