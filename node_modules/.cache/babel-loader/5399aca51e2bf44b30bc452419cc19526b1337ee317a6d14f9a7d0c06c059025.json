{"ast":null,"code":"import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\nexport default {\n  name: \"RasterLayer\",\n  mixins: [mixin],\n  created() {\n    this.$_deferredMount();\n  },\n  methods: {\n    $_deferredMount() {\n      let source = {\n        type: \"raster\",\n        ...this.source\n      };\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      this.initial = false;\n    },\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", {\n            layerId: this.layerId\n          });\n          return existed;\n        }\n      }\n      let layer = {\n        id: this.layerId,\n        type: \"raster\",\n        source: this.sourceId,\n        ...this.layer\n      };\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", {\n        layerId: this.layerId\n      });\n    }\n  }\n};","map":{"version":3,"names":["layerEvents","mixin","name","mixins","created","$_deferredMount","methods","source","type","map","on","$_watchSourceLoading","addSource","sourceId","err","replaceSource","removeSource","$_addLayer","$_bindLayerEvents","off","initial","existed","getLayer","layerId","replace","removeLayer","$_emitEvent","layer","id","addLayer","before"],"sources":["/Users/azizjonabdugafforov/Desktop/Code/SilkRoadExpress_WebApp/node_modules/vue-mapbox/src/components/layer/RasterLayer.js"],"sourcesContent":["import layerEvents from \"../../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\n\nexport default {\n  name: \"RasterLayer\",\n  mixins: [mixin],\n\n  created() {\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      let source = {\n        type: \"raster\",\n        ...this.source\n      };\n\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      try {\n        this.map.addSource(this.sourceId, source);\n      } catch (err) {\n        if (this.replaceSource) {\n          this.map.removeSource(this.sourceId);\n          this.map.addSource(this.sourceId, source);\n        }\n      }\n      this.$_addLayer();\n      this.$_bindLayerEvents(layerEvents);\n      this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", { layerId: this.layerId });\n          return existed;\n        }\n      }\n      let layer = {\n        id: this.layerId,\n        type: \"raster\",\n        source: this.sourceId,\n        ...this.layer\n      };\n\n      this.map.addLayer(layer, this.before);\n      this.$_emitEvent(\"added\", { layerId: this.layerId });\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,KAAK,MAAM,cAAc;AAEhC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,CAACF,KAAK,CAAC;EAEfG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EAEDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,IAAIE,MAAM,GAAG;QACXC,IAAI,EAAE,QAAQ;QACd,GAAG,IAAI,CAACD;MACV,CAAC;MAED,IAAI,CAACE,GAAG,CAACC,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,oBAAoB,CAAC;MACrD,IAAI;QACF,IAAI,CAACF,GAAG,CAACG,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAEN,MAAM,CAAC;MAC3C,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ,IAAI,IAAI,CAACC,aAAa,EAAE;UACtB,IAAI,CAACN,GAAG,CAACO,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC;UACpC,IAAI,CAACJ,GAAG,CAACG,SAAS,CAAC,IAAI,CAACC,QAAQ,EAAEN,MAAM,CAAC;QAC3C;MACF;MACA,IAAI,CAACU,UAAU,CAAC,CAAC;MACjB,IAAI,CAACC,iBAAiB,CAAClB,WAAW,CAAC;MACnC,IAAI,CAACS,GAAG,CAACU,GAAG,CAAC,aAAa,EAAE,IAAI,CAACR,oBAAoB,CAAC;MACtD,IAAI,CAACS,OAAO,GAAG,KAAK;IACtB,CAAC;IAEDH,UAAUA,CAAA,EAAG;MACX,IAAII,OAAO,GAAG,IAAI,CAACZ,GAAG,CAACa,QAAQ,CAAC,IAAI,CAACC,OAAO,CAAC;MAC7C,IAAIF,OAAO,EAAE;QACX,IAAI,IAAI,CAACG,OAAO,EAAE;UAChB,IAAI,CAACf,GAAG,CAACgB,WAAW,CAAC,IAAI,CAACF,OAAO,CAAC;QACpC,CAAC,MAAM;UACL,IAAI,CAACG,WAAW,CAAC,cAAc,EAAE;YAAEH,OAAO,EAAE,IAAI,CAACA;UAAQ,CAAC,CAAC;UAC3D,OAAOF,OAAO;QAChB;MACF;MACA,IAAIM,KAAK,GAAG;QACVC,EAAE,EAAE,IAAI,CAACL,OAAO;QAChBf,IAAI,EAAE,QAAQ;QACdD,MAAM,EAAE,IAAI,CAACM,QAAQ;QACrB,GAAG,IAAI,CAACc;MACV,CAAC;MAED,IAAI,CAAClB,GAAG,CAACoB,QAAQ,CAACF,KAAK,EAAE,IAAI,CAACG,MAAM,CAAC;MACrC,IAAI,CAACJ,WAAW,CAAC,OAAO,EAAE;QAAEH,OAAO,EAAE,IAAI,CAACA;MAAQ,CAAC,CAAC;IACtD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}